unixv6fs.h:
8c8
<  * This file is a revision from Edouard Bugnion of a file created by
---
>  * This file is an revision from Edouard Bugnion of a file created by
19d18
<  * @author original UNIX v6 team + Mendel Rosenblum (Stanford) + Edouard Bugnion
35c34
<  * inodes                | s_inode_start  | s_inode_start+s_isize-1
---
>  * inodes                | s_inode_start  | s_inode_start_s_isize-1
150c149
< // Max. number of sector locations held in an inode
---
> // Max. number of sector locations hold in an inode
160a160,161
> #define DATE_SIZE 2 /* uint16_t TIME*/
> 
202,204c203,211
<     /* TODO WEEK 04:
<      * la première chose à faire est de définir cette structure.
<      */
---
>     uint16_t i_mode;                        // Used
>     uint8_t i_nlink;
>     uint8_t i_uid;
>     uint8_t i_gid;
>     uint8_t i_size0;                        // Used
>     uint16_t i_size1;                       // Used
>     uint16_t i_addr[ADDR_SMALL_LENGTH];     // Used
>     uint16_t i_atime[DATE_SIZE];
>     uint16_t i_mtime[DATE_SIZE];


mount.h:
7d6
<  * @author Edouard Bugnion
47a47,58
>  * @brief read inodes and fill u bmblock array
>  * @param u to fill
>  */
> void fill_ibm(struct unix_filesystem * u);
> 
> /**
>  * @brief read sectors and fill u bmblock array
>  * @param u to fill
>  */
> void fill_fbm(struct unix_filesystem * u);
> 
> /**
50a62
>  * @return 0 on success, <0 on error


error.h:
7d6
<  * @author Edouard Bugnion


inode.h:
7d6
<  * @author Edouard Bugnion
13a13,15
> #define SECT_DOWN_LIM (ADDR_SMALL_LENGTH * SECTOR_SIZE)
> #define SECT_UP_LIM (7 * ADDRESSES_PER_SECTOR * SECTOR_SIZE)
> 
19c21
<  * @brief Return the size of a file associated to a given inode.
---
>  * @brief Return the size of a given inode.
22c24
<  *        file size (which is 24 bits) in two fields or 8 bits and 16
---
>  *        file size (which is 24 bits) in two fields of 8 bits and 16


sha.h:
7d6
<  * @author Aurélien Soccard


test-core.c:
5d4
<  * @author Aurélien Soccard & Jean-Cédric Chappelier
51a51
>         printf("mainerr");


filev6.h:
7d6
<  * @author Edouard Bugnion
38c37
<  * @return 0 on success; <0 on errror
---
>  * @return 0 on success; <0 on error
56c55
<  * @return 0 on success; <0 on errror
---
>  * @return 0 on success; <0 on error
66c65
<  * @return 0 on success; <0 on errror
---
>  * @return 0 on success; <0 on error


sector.h:
7d6
<  * @author Edouard Bugnion
31c29
<  * @brief write one 512-byte sector from the virtual disk
---
>  * @brief write one 512-byte sector to the virtual disk


direntv6.h:
7d6
<  * @author Edouard Bugnion
15a15,16
> #define MAXPATHLEN_UV6 (1024)
> 
20,22c21,24
< struct directory_reader {
<     /* TODO WEEK 06:
<      * définir cette structure.
---
> /**
>  * @brief skip the '/' in the front of a string
>  * @param str pointer to the string
>  * @return str increased to skip the '/' in the front
24c26,32
<     int unused; // so that it can compile before WEEK 6
---
> char* trim_slash(char* str);
> 
> struct directory_reader {
>     struct filev6 fv6;
>     struct direntv6 dirs[DIRENTRIES_PER_SECTOR];
>     uint32_t cur;
>     uint32_t last;
58c66
<  * @param entry the pathname relative to the subtree
---
>  * @param entry pathname relative to the subtree


bmblock.h:
7d6
<  * @author Edouard Bugnion
19c18,22
<     int unused; // so that it can compile before WEEK 9
---
>     size_t length;
>     uint64_t cursor;
>     uint64_t min;       // inclusive, nbrToUse = max - min + 1
>     uint64_t max;       // inclusive
>     uint64_t bm[1];

